<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:com="com.*" resize="this.parent.height=this.height;" creationComplete="createPlayList()" verticalGap="-5">
	<mx:Script>
		<![CDATA[
			import mx.effects.Move;
			import com.PlayListItem;
			
			private var _items : Array;
			
			public function set headline(value:String):void {playlistHeadline.text = value;}

			public function set itemArray(value : Array) : void
			{
				_items = value;
			}
			
			private function handleNextPrevDisplay():void{
				previousBtn.visible= (playListBox.x < 0);
				nextBtn.visible= (playListBox.x>(playListCanvas.width-playListBox.width));
			}
			
			private function scrollBack() : void
			{
				if(playListBox.width > playListCanvas.width)
				{
					mover.end();
					mover.xTo = mover.target.x+(playListCanvas.width*.6);
					if(mover.xTo > 0)
					{
						mover.xTo = 0;
						mover.play();
					}
					else
					{
						mover.play();
					}
				}
				handleNextPrevDisplay();
				
			}
			
			private function scrollForward() : void
			{
				if(playListBox.width > playListCanvas.width)
				{
					mover.end();
					mover.xTo = mover.target.x-(playListCanvas.width*.6);
					if(mover.xTo < (playListCanvas.width - playListBox.width))
					{
						mover.xTo = playListCanvas.width - playListBox.width;
						mover.play();
					}
					else
					{
						mover.play();
					}
				}
				handleNextPrevDisplay();
				dispatchEvent(new PlayListEvent(-1));
			}
			
			private function createPlayList() : void
			{
				if(_items != null)
				{
					for(var i:Number = 0; i<_items.length; i++)
					{
						var playlistElement : PlayListItem = new PlayListItem();
						playlistElement.itemID = _items[i].itemID;
						playlistElement.movieName = _items[i].title;
						playlistElement.sourceURL = _items[i].photoSource;
						playlistElement.verticalScrollPolicy = "off";
						playlistElement.horizontalScrollPolicy = "off";
						playListBox.addChild(playlistElement);
						playlistElement.addEventListener(MouseEvent.CLICK , selectHandler);
					}
				}
			}
			
			private function selectHandler(evt:MouseEvent) : void
			{
				dispatchEvent(new PlayListEvent(evt.target.itemID));
			}
			
		]]>
	</mx:Script>
	<mx:Label id="playlistHeadline" paddingTop="8" paddingLeft="38" text="Related videos" visible="true"  
		fontFamily="Arial" color="#cccccc" 
		fontSize="11" fontWeight="normal" truncateToFit="true"/>
	
	<mx:Canvas width="100%" height="115">
		<com:PlayerButton id="previousBtn" 
			click="{scrollBack()}"
			width="30"
			top="0" 
			left="0" 
			bottom="0" 
			imageSource="@Embed(source='assets/buttons/prev.png')"
			imageHoverSource="@Embed(source='assets/buttons/prev-hover.png')"
			visible="false"
			/>  

		<mx:Canvas verticalCenter="0" verticalScrollPolicy="off" horizontalScrollPolicy="off" left="35" right="35" id="playListCanvas">
			<mx:HBox id="playListBox" verticalScrollPolicy="off" verticalCenter="0" horizontalGap="0" />
		</mx:Canvas>

		<com:PlayerButton id="nextBtn" 
			click="{scrollForward()}"
			width="30"
			top="0" 
			right="0" 
			bottom="0" 
			imageSource="@Embed(source='assets/buttons/next.png')"
			imageHoverSource="@Embed(source='assets/buttons/next-hover.png')"
			/>  
	</mx:Canvas>
	<mx:Move id="mover" target="{playListBox}" effectEnd="handleNextPrevDisplay();" />
</mx:VBox>
