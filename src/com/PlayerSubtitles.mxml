<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	width="100%" 
	height="100%"
	initialize="{init();}"
	resize="{resize();}"
	verticalScrollPolicy="off"
	horizontalScrollPolicy="off"
	>
	<mx:Script>
		<![CDATA[
			import mx.containers.HBox;
			import mx.controls.Label;
			import com.visual.VisualVideo;
			
			private var _targetVideo:VisualVideo;
			public function set targetVideo(v:VisualVideo):void {
				_targetVideo = v;
			}
			public function get targetVideo():VisualVideo {return(_targetVideo);}
			
			// Supported locales
			[Bindable] private var _supportedLocales:Object = {};
			public function set suppportedLocales(l:Object):void {
				clearSubtitles();
				_supportedLocales = l;
			}
			[Bindable] public function get suppportedLocales():Object {return(_supportedLocales);} 

			// Locale
			[Bindable] private var _locale:String = '';
			[Bindable] private var _localeObject:Object = {};
			public function set locale(l:String):void {
				if(_locale==l) return;
				if(_supportedLocales[l]) {
					_locale = l;	
					_localeObject = _supportedLocales[l];
					loadSubtitles();
				} else {
					clearSubtitles();
					_locale = '';
					_localeObject = ''; 
				}
			}
			public function get locale():String {return(_locale);}
			
			public var design:String = 'bars';
			
			// The actual subtitles + parsing
			import com.adobe.serialization.json.JSON;
			import com.adobe.serialization.json.JSONParseError;
			private var subtitleTimer:Timer = new Timer(100);
			private var subtitles:Array;
			
			// Outline filter
			private var outlineFilter:GlowFilter = null;
			private function loadSubtitles():void{
				if(!_localeObject.href)return;
				clearSubtitles();
				try {
					var loader:URLLoader = new URLLoader();
					loader.addEventListener(Event.COMPLETE, function(e:Event):void {
							try {
								subtitles = JSON.decode(loader.data).subtitles;
								subtitleTimer.start();
							}catch(e:JSONParseError){} 
						});
					loader.load(new URLRequest(_localeObject.href));
				}catch(e:ErrorEvent){}
				this.parentApplication.reportEvent('subtitlesActived');
			}
			private function clearSubtitles():void {
				display.removeAllChildren();
				subtitles = [];
				subtitleTimer.stop();
			}
			private function displaySubtitles(e:Event):void{
				if(!subtitles.length || !_targetVideo.playing) return;

				// Possibly prepare glow filter for outlining subtitles
				if(design!=='bars' && !outlineFilter) { 
					outlineFilter = new GlowFilter;
					outlineFilter.color = 0x000000;
					outlineFilter.alpha = 1;
					outlineFilter.blurX = 3;
					outlineFilter.blurY = 3;
				}
				
				var playheadTime:Number = _targetVideo.playheadTime + this.parentApplication.activeElement.getNumber('start') + 0.05;
				var matched:Boolean = false;
				for (var i:Object in subtitles) {
					if(subtitles[i].timestamp_begin<=playheadTime && subtitles[i].timestamp_end>=playheadTime) {
						display.removeAllChildren();
						for(var ix:String in subtitles[i].text) {
							var h:HBox = new HBox();
							var l:Label = new Label();
							display.addChild(h);
							h.addChild(l);
							
							l.text = subtitles[i].text[ix];
							h.setStyle('paddingTop', 1);
							h.setStyle('paddingRight', 4);
							h.setStyle('paddingBottom', 1);
							h.setStyle('paddingLeft', 4);
							if (design==='bars') {
								h.setStyle('backgroundColor', 'black');
								h.setStyle('backgroundAlpha', 0.8);
							} else {
								l.filters = [outlineFilter];
							}
						}
						matched = true;
						break;
					}
				}
				if(!matched) display.removeAllChildren();
			}
			private function init():void {
				subtitleTimer.addEventListener(TimerEvent.TIMER, displaySubtitles);
			}
			private function resize():void {
				var maxSize:int = 25;
				var minSize:int = 11;
				var varSize:int = this.width/40;
				display.setStyle('fontSize', (varSize>maxSize ? maxSize : (varSize<minSize ? minSize : varSize)));
			}
		]]>
	</mx:Script>	
	
	<mx:VBox 
		id="display"
		bottom="60" 
		textAlign="center"
		horizontalCenter="0" 
		verticalGap="3"
		color="white"
		>
	</mx:VBox>

</mx:Canvas>
